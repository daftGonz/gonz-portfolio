import{A as r}from"./UIcon.9e2f1a15.js";function c(e,...s){const t=Object.assign({},e);return Object.keys(t).forEach(a=>{s.includes(a)&&delete t[a]}),t}const o=e=>e,m=[o({name:"Programming Languages",slug:"pro-lang"}),o({name:"Data Interchange Formats",slug:"data-formats"}),o({name:"Libraries",slug:"library"}),o({name:"Langauges",slug:"lang"}),o({name:"Databases",slug:"db"}),o({name:"ORMs",slug:"orm"}),o({name:"DevOps",slug:"devops"}),o({name:"Testing",slug:"test"}),o({name:"Dev Tools",slug:"devtools"}),o({name:"Markup & Style",slug:"markup-style"}),o({name:"Design",slug:"design"}),o({name:"Soft Skills",slug:"soft"})],i=e=>{const s=c(e,"category");return e.category&&(s.category=m.find(t=>t.slug===e.category)),s},l=[i({slug:"json",color:"yellow",description:"3+ years of experience using JSON to support automation workflows between Freshservice, Microsoft 365, and various SaaS platforms. Built fully automated service catalog workflows and end-to-end employee onboarding/offboarding solutions using Azure Logic Apps and custom RESTful APIs, enabling seamless data exchange and reducing manual intervention.",logo:r.JSON,name:"JSON",category:"data-formats"}),i({slug:"python",color:"blue",description:"Designed and built a custom Python web application to streamline IT inventory intake and asset tag generation, integrating with Freshservice and Brother Printer SDK. Reduced asset processing time from 10 minutes to under 2 minutes per asset, significantly improving operational efficiency.",logo:r.Python,name:"Python",category:"pro-lang"}),i({slug:"powershell",color:"blue",description:"7+ years of experience developing custom scripts to automate administrative and programmatic tasks across Microsoft 365 and Azure environments. Projects include automating creation of Exchange Workspace resources, bulk updates to users and groups in Entra ID, and scripting workflows for Teams and SharePoint administration.",logo:r.PowerShell,name:"PowerShell",category:"pro-lang"})],p="Skills",f=(...e)=>l.filter(s=>e.includes(s.slug)),y=e=>{const s=[],t=[];return l.forEach(a=>{if(e.trim()&&!a.name.toLowerCase().includes(e.trim().toLowerCase()))return;if(!a.category){t.push(a);return}let n=s.find(u=>{var g;return u.category.slug===((g=a.category)==null?void 0:g.slug)});n||(n={items:[],category:a.category},s.push(n)),n.items.push(a)}),t.length!==0&&s.push({category:{name:"Others",slug:"others"},items:t}),s};export{y as a,f as g,l as i,p as t};
